# Main make file. All others will simply change the variables within this one

CFLAGS += -O3 -m32 -c -I../rumprun/platform/cos/rump/include
LDFLAGS = -melf_i386 -r -o
APPTOOLS = $(shell pwd)/../../rumprun/app-tools
CC = $(APPTOOLS)/i486-rumprun-netbsdelf-gcc
LD = $(APPTOOLS)/i486-rumprun-netbsdelf-ld
BAKE = $(APPTOOLS)/rumpbake
RUN = $(APPTOOLS)/rumprun


RUNCONFS ?= -T ../temp qemu -i -M 128 -I if,vioif,'-net tap,script=no,ifname=tap0' -W if,inet,static,10.0.120.101/24 --
RUNPOST  ?=
SRC ?=
OBJ ?=
APP ?= app
LIBS ?= hw_generic
DEPS ?=

all : $(APP).bin
	$(RUN) qemu -i $(APP).bin
	$(RUN) $(RUNCONFS) $(APP).bin $(RUNPOST)

$(APP).bin : $(APP).out
	$(BAKE) $(LIBS) $(APP).bin $(APP).out

$(APP).out : $(APP).o
	#$(LD) $(LDFLAGS) a.out *.o $(DEPS)
	$(LD) $(LDFLAGS) $(APP).out *.o $(DEPS)
	@echo
	@echo =---------------------------------------=
	@echo
	@echo	If you compilation fails here,
	@echo	comment out lines 93-104 of
	@echo	rumprun/app-tools/i486-rumprun-netbsdelf-gcc
	@echo
	@echo =---------------------------------------=
	@echo
	#$(CC) -m32 -Wl,-r -o $(APP).out a.out
	#@rm a.out

$(APP).o : $(SRC)
	# since we are just compiling we need to manually get the recipe.s file from app-tools
	# the app-tools/bake script looks for it.
	# This is kinda an out of place command. It uses the host computer's gcc
	gcc -m32 -O3 -c -o recipe.o ../../rumprun/app-tools/i486-rumprun-netbsdelf-recipe.s
	$(CC) $(CFLAGS) $(SRC)

debug : $(APP).bin
	$(RUN)  qemu -ip -D 1234 $(APP).bin &

clean :
	rm -f *.out *.bin
	rm -fr ../temp
	rm -f *.o
